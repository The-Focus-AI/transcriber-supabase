```json
[
  {"speaker": "Noah", "start_time": 0.0, "end_time": 2.613, "text": "And how does it look like to push something out to production?"},
  {"speaker": "John", "start_time": 2.613, "end_time": 6.143, "text": "Something that's interesting that I haven't seen at my past jobs that we started doing recently."},
  {"speaker": "John", "start_time": 7.133, "end_time": 10.393, "text": "For all of our unit tests and all of our interaction tests,"},
  {"speaker": "John", "start_time": 10.393, "end_time": 15.533, "text": "we run the full suite with all the flags off and then with all the flags on."},
  {"speaker": "John", "start_time": 15.533, "end_time": 18.273, "text": "So the same tests are like running in both permutation."},
  {"speaker": "John", "start_time": 18.273, "end_time": 22.233, "text": "And like obviously like within the test, you can specify a different permutation."},
  {"speaker": "John", "start_time": 22.233, "end_time": 25.823, "text": "Like if you're writing a test that only covers something that requires that flag."},
  {"speaker": "John", "start_time": 25.823, "end_time": 27.293, "text": "Obviously, you need that flag to be on."},
  {"speaker": "John", "start_time": 27.293, "end_time": 38.583, "text": "Before we were doing this, this was a source of regressions, right? where it's like this flag caused this to break and I didn't know this until, you know, someone went to delete the flag and then like that caused tests to fail."},
  {"speaker": "John", "start_time": 38.583, "end_time": 40.913, "text": "So now that we're doing this, it's pretty awesome."},
  {"speaker": "Noah", "start_time": 41.168, "end_time": 46.108, "text": "Figma created a new product called Figma slides in less than a year from idea to launching it NB in April 2024."},
  {"speaker": "Noah", "start_time": 46.728, "end_time": 52.228, "text": "Since then, users have created more than 4.5 million slide decks and the product is quickly gaining momentum."},
  {"speaker": "Noah", "start_time": 52.568, "end_time": 53.738, "text": "But how was it built?"},
  {"speaker": "Noah", "start_time": 53.988, "end_time": 58.908, "text": "I sat down with two engineers who worked on this project from the start, Jonathan Kaufman and Noah Finer."},
  {"speaker": "Noah", "start_time": 59.378, "end_time": 1.5938, "text": "In today's conversation, we cover how Figma slides is built using TypeScript, React and a lot of C++ code."},
  {"speaker": "Noah", "start_time": 1.6568, "end_time": 1.11358, "text": "Why building a seemingly simple UI, the single slide view is a lot more complicated than it seems."},
  {"speaker": "Noah", "start_time": 1.11828, "end_time": 1.22528, "text": "Enginering approaches at Figma, including the ench crit process, using a feature flags, and running all unit tests twice, once with all the feature flags turned off, and then once with all turned on, and a lot more."},
  {"speaker": "Noah", "start_time": 1.23008, "end_time": 1.31218, "text": "If you're interested in a behind the scenes look of how the engineering team at Figma does things differently, sometimes by choice, sometimes by necessity, then this episode is for you."},
  {"speaker": "Noah", "start_time": 1.31648, "end_time": 1.35918, "text": "If you enjoy the show, please subscribe to the podcast on any podcast platform and on YouTube."},
  {"speaker": "Noah", "start_time": 1.36568, "end_time": 1.38808, "text": "John and Noah, it's great to have you on the podcast."},
  {"speaker": "John", "start_time": 1.39183, "end_time": 1.40473, "text": "Yeah, happy to be here."},
  {"speaker": "Jonathan", "start_time": 1.40953, "end_time": 1.41923, "text": "Also excited to be here."},
  {"speaker": "Noah", "start_time": 1.42568, "end_time": 1.43958, "text": "So, how did you start building?"},
  {"speaker": "Noah", "start_time": 1.44088, "end_time": 1.45908, "text": "You know, like what kind of what kind of text stack did you use back then?"},
  {"speaker": "Noah", "start_time": 1.46758, "end_time": 1.50198, "text": "Uh you know, like did you just have a few scratches?"},
  {"speaker": "Noah", "start_time": 1.50198, "end_time": 1.53628, "text": "Like it sounds like a really exciting part of the of the project, right?"},
  {"speaker": "Noah", "start_time": 1.53628, "end_time": 1.56758, "text": "And it actually, you know, it it can make or break a project."},
  {"speaker": "John", "start_time": 1.57033, "end_time": 2.1273, "text": "So everything about the slide grid and um and those things were were built just sort of on a branch."},
  {"speaker": "John", "start_time": 2.4573, "end_time": 2.10653, "text": "And we kind of hack week style were like we wouldn't have merged this to uh our main branch yet."},
  {"speaker": "Noah", "start_time": 2.10978, "end_time": 2.18308, "text": "Would you mind just sharing like how Figma size looks and and what the parts are that you're talking about, the for example, the slide deck and the grid."},
  {"speaker": "John", "start_time": 2.18813, "end_time": 2.26243, "text": "Um, so this is Figma slides, when you enter uh slides, you're presented with what we refer to as single slide view."},
  {"speaker": "John", "start_time": 2.26823, "end_time": 2.34003, "text": "And this is what people are very familiar uh with seeing in Google slides and PowerPoint and Keynote, where you have um this carousel on the left and you can go through the slides."},
  {"speaker": "John", "start_time": 2.34003, "end_time": 2.35013, "text": "Yeah."},
  {"speaker": "John", "start_time": 2.39343, "end_time": 2.50673, "text": "Yeah. Um, but what we noticed, um is that when designers were building slides within Figma design, they would always lay everything out uh using our infinite canvas."},
  {"speaker": "John", "start_time": 2.51313, "end_time": 2.55233, "text": "Um, so this is what we refer to as as grid view."},
  {"speaker": "John", "start_time": 2.56763, "end_time": 3.11503, "text": "Um, there were a bunch of annoyances uh building a deck like this in Figma design and part of it is, you know, if you have all these top-level frames on a on a canvas, if you want to reorder them, they don't just like reorder, right?"},
  {"speaker": "Noah", "start_time": 3.11808, "end_time": 3.12358, "text": "Yeah, yeah."},
  {"speaker": "John", "start_time": 3.12923, "end_time": 3.21433, "text": "So one of the first things that we built was like exploring how how can we give better um reorder behaviors for people who want to build slides and like see slides in this way."},
  {"speaker": "John", "start_time": 3.21433, "end_time": 3.26133, "text": "right?"},
  {"speaker": "John", "start_time": 3.26133, "end_time": 3.32383, "text": "So, you know, as you drag things around, they they reorder, you can reorder a whole row."},
  {"speaker": "John", "start_time": 3.33103, "end_time": 3.41613, "text": "Um and what uh was interesting is if you go back to single slide view, those rows correspond to the sections here."},
  {"speaker": "John", "start_time": 3.42203, "end_time": 3.51003, "text": "So each of these sections are the rows in in in in grid view and so it's this nice one to one relationship."},
  {"speaker": "John", "start_time": 3.51003, "end_time": 3.52833, "text": "And so what this allows is it"},
  {"speaker": "Noah", "start_time": 3.52833, "end_time": 3.55083, "text": "Oh wait, hold on. I just just a question."},
  {"speaker": "Noah", "start_time": 3.55083, "end_time": 3.56788, "text": "Like so what about the columns? Like is that"},
  {"speaker": "John", "start_time": 3.57913, "end_time": 3.58763, "text": "Uh yeah, yeah."},
  {"speaker": "John", "start_time": 3.58763, "end_time": 4.3663, "text": "So if uh see how this is this this Brandon slide is the is the second slide."},
  {"speaker": "John", "start_time": 4.3863, "end_time": 4.8713, "text": "If I make that third and then go back to grid, you'll see that this is now in this position."},
  {"speaker": "John", "start_time": 4.8993, "end_time": 4.9993, "text": "Got it, got it."},
  {"speaker": "John", "start_time": 4.9993, "end_time": 4.13883, "text": "If I reorder this whole row and then go back to single slide view,"},
  {"speaker": "John", "start_time": 4.14513, "end_time": 4.16803, "text": "That whole row is now second, right?"},
  {"speaker": "John", "start_time": 4.17333, "end_time": 4.24953, "text": "And so what this allows is um people who are more familiar and comfortable with the infinite canvas."},
  {"speaker": "John", "start_time": 4.24953, "end_time": 4.35593, "text": "They can live in grid mode where they're where they're happy, but people who may be less familiar or or or don't want that view, they can stay in this view on the same file."},
  {"speaker": "Noah", "start_time": 4.36142, "end_time": 4.45572, "text": "This episode was brought to you by Graphite, the developer productivity platform that helps developers create, review and merge smaller code changes, stay unblocked and ship faster."},
  {"speaker": "Noah", "start_time": 4.46472, "end_time": 4.48872, "text": "Code review is a huge time sync for entering teams."},
  {"speaker": "Noah", "start_time": 4.49242, "end_time": 4.53932, "text": "Most developers spend about a day per week or more reviewing code or blocked waiting for a review."},
  {"speaker": "Noah", "start_time": 4.54742, "end_time": 4.56122, "text": "It doesn't have to be this way."},
  {"speaker": "Noah", "start_time": 4.56712, "end_time": 5.5102, "text": "Graphite brings stack poll requests, the workflow at the heart of the best-in-class internal code review tools at companies like Meta and Google, to every software company on GitHub."},
  {"speaker": "Noah", "start_time": 5.6002, "end_time": 5.14902, "text": "Graphite also leverages high signal, codebase aware AI to give developers immediate actionable feedback on their poll requests, allowing teams to cut down on review cycles."},
  {"speaker": "Noah", "start_time": 5.15692, "end_time": 5.21882, "text": "Tens of thousands of developers at top companies like Asana, Ramp, Tecton, and Vercel rely on Graphite every day."},
  {"speaker": "Noah", "start_time": 5.22612, "end_time": 5.27042, "text": "Start stacking with Graphite today for free and reduce your time to merge from days to hours."},
  {"speaker": "Noah", "start_time": 5.27552, "end_time": 5.30032, "text": "Get started at gt.dev/pragmatic."},
  {"speaker": "Noah", "start_time": 5.30802, "end_time": 5.34842, "text": "That is g for graphite t for technology.dev/pragmatic."},
  {"speaker": "Noah", "start_time": 5.35541, "end_time": 5.40691, "text": "This episode is brought to you by Sonar, the creators of Sonar Cube server, cloud, ID and community build."},
  {"speaker": "Noah", "start_time": 5.41301, "end_time": 5.51651, "text": "Sonar will now offer Sonar Cube advanced security, delivering the first fully integrated solution for developers to find and fix code quality and code security issues in the development phase of the software development life cycle."},
  {"speaker": "Noah", "start_time": 5.52151, "end_time": 5.59831, "text": "Sonar Cube advanced security enhances Sonar's core security capabilities with software composition analysis and advanced static application security testing."},
  {"speaker": "Noah", "start_time": 6.11, "end_time": 6.7061, "text": "This enables developers to identify vulnerabilities in third-party dependencies, ensure license compliance, and generate software bill of materials."},
  {"speaker": "Noah", "start_time": 6.8131, "end_time": 6.15961, "text": "Sonar analyzes all code, first party, AI generated and third-party open source, resulting in more secure, reliable and maintainable software."},
  {"speaker": "Noah", "start_time": 6.16541, "end_time": 6.22681, "text": "Joined over 7 million developers from organizations like Microsoft, DOD, Barclays and T-Mobile who use Sonar."},
  {"speaker": "Noah", "start_time": 6.23321, "end_time": 6.28071, "text": "Prioritize code security and code quality issues at the beginning of the software development life cycle."},
  {"speaker": "Noah", "start_time": 6.28891, "end_time": 6.32941, "text": "Visit sonar source.com/pragmatic security to learn more about Sonar Cube."},
  {"speaker": "Noah", "start_time": 6.33378, "end_time": 6.35928, "text": "And then so when you started, you know, it was just a very small team."},
  {"speaker": "Noah", "start_time": 6.36518, "end_time": 6.41818, "text": "So one of the first things was coming up with this kind of two-way navigation that would make it unique, right?"},
  {"speaker": "Noah", "start_time": 6.41818, "end_time": 6.49978, "text": "Because I had I haven't really seen this, you know, like going from an infinite grid view to this single the single side we're we're familiar with."},
  {"speaker": "Noah", "start_time": 6.50088, "end_time": 6.54188, "text": "But what what was this one of the challenges to, you know, build a rough prototype of?"},
  {"speaker": "John", "start_time": 6.54863, "end_time": 6.57393, "text": "Uh this this became a later challenge."},
  {"speaker": "John", "start_time": 6.57923, "end_time": 7.4163, "text": "Um but what's interesting is we actually didn't build single slide view until like six or seven months into the project."},
  {"speaker": "John", "start_time": 7.4663, "end_time": 7.9943, "text": "For the first while slides was exclusively in in the grid view."},
  {"speaker": "John", "start_time": 7.10343, "end_time": 7.23693, "text": "And what we built out was like, how how are you going to manipulate slides here? What are the um what's the template system going to look like? You know, like like when you add a slide, how how can we pull from an existing deck?"},
  {"speaker": "John", "start_time": 7.24443, "end_time": 7.32363, "text": "Um, what's the theme system going to be? Um, you know, choosing colors within a theme and then like editing the whole theme of a deck."},
  {"speaker": "John", "start_time": 7.32893, "end_time": 7.35373, "text": "And then lastly like what is the presentation going to be like?"},
  {"speaker": "John", "start_time": 7.35843, "end_time": 7.48463, "text": "Those are like the the key areas of initial exploration, whereas a single slide view, we felt more confident that we could build and because of that confidence, we didn't want to prototype it too too early."},
  {"speaker": "John", "start_time": 7.48783, "end_time": 7.51813, "text": "We're like we just wanted to focus on the riskier bits."},
  {"speaker": "Jonathan", "start_time": 7.52183, "end_time": 7.55643, "text": "Yeah, actually, I came on around the time that uh single slide view was being built."},
  {"speaker": "Jonathan", "start_time": 7.55643, "end_time": 8.2913, "text": "And um I remember the first draft of single slide view was like something that John cranked out in like like I think just a couple days."},
  {"speaker": "Jonathan", "start_time": 8.2913, "end_time": 8.14023, "text": "It was just like like boxes on the left side and then if you like zoomed into a slide or something, it like teleported you into single slide view and just like showed the left side. and then if you zoomed out, it went away."},
  {"speaker": "Jonathan", "start_time": 8.14563, "end_time": 8.31973, "text": "Um, and a lot of like when I first got on was like prototyping like, oh, how like how will single slide view work? Is it are we going to try to make it like based on how zoomed in or zoomed out you are of the grid? Or like do we want to have like buttons and keyboard shortcuts and all this other stuff?"},
  {"speaker": "Jonathan", "start_time": 8.32453, "end_time": 8.37983, "text": "And there's like a lot still to figure out about what is single slide view and how do we make it work?"},
  {"speaker": "Jonathan", "start_time": 8.37983, "end_time": 8.53013, "text": "Um, and what we kind of landed on is um secretly like in this view, in single slide view, we have like zoomed into the canvas, um, and yeah, we've zoomed into the grid, we've hid everything except for just like the slide itself."},
  {"speaker": "Noah", "start_time": 8.53318, "end_time": 8.53768, "text": "Oh, really?"},
  {"speaker": "Jonathan", "start_time": 8.54053, "end_time": 8.56533, "text": "show some UI on the left and the right."},
  {"speaker": "Jonathan", "start_time": 8.56533, "end_time": 9.2663, "text": "So, um yeah, there's a lot of iteration back then to like figure out what are we even doing with this?"},
  {"speaker": "John", "start_time": 9.3583, "end_time": 9.19863, "text": "Yeah, it's one of the interesting parts about building on Figma's like infinite canvas, right? Is because we wanted to preserve the grid view, um and allow people to still edit in grid view and have their like cursors show up as they're editing if someone's in single slide view."},
  {"speaker": "John", "start_time": 9.20643, "end_time": 9.25613, "text": "What that means is that the slides are still represented in this two-dimensional space."},
  {"speaker": "John", "start_time": 9.26033, "end_time": 9.31623, "text": "And so all single slide view is is as you toggle through the slides, we just snap the view port for you."},
  {"speaker": "Noah", "start_time": 9.33378, "end_time": 9.35218, "text": "That that that that is clever."},
  {"speaker": "Noah", "start_time": 9.35638, "end_time": 9.56738, "text": "And just taking a a step back just to understand like how the project roughly went. Uh so you you had the early prototyping phase, you then had the the you know, like those like one or two months building a proof of concept. And then like what were the phases and and what parts did you build until we we get to final, you know, general availability?"},
  {"speaker": "Jonathan", "start_time": 9.57323, "end_time": 10.10053, "text": "Yeah, I think um so when it was sort of John and just like one or two other engineers, um before the team was fully staffed, there's a lot of focus on sort of like the grid view, um and like how are we going to lay out slides in the grid."},
  {"speaker": "Jonathan", "start_time": 10.10733, "end_time": 10.20963, "text": "Um then after the team started getting staffed a little bit more, then there were more explorations around like how do we lay out things on a slide? And we actually went through a lot of iterations there of like, do we want to do like constrained layouts where like users everything is auto layout and users can like add something to the left, add something to the right and stuff like that?"},
  {"speaker": "Jonathan", "start_time": 10.21243, "end_time": 10.23803, "text": "Or do you want to do something a little bit more free form?"},
  {"speaker": "Jonathan", "start_time": 10.24233, "end_time": 10.33753, "text": "Um we also did a lot of work on like single slide view, nailing like centering the slide in single slide view versus not that took like months of like working with designers and like sending over prototypes in order to like like figure out."},
  {"speaker": "Jonathan", "start_time": 10.33753, "end_time": 10.54933, "text": "Um we also had a big group working on like um like um presenting and presenter view. Um speaker notes took a that was like one of the first things we wanted to add."},
  {"speaker": "Jonathan", "start_time": 10.54933, "end_time": 11.17313, "text": "And also like themes and working to like create a system of colors that both like come from the template you're using, but also allow you to edit on top of it, which is like a whole new concept in Figma world."},
  {"speaker": "Jonathan", "start_time": 11.17313, "end_time": 11.21813, "text": "So, um those all sort of happened, um coming like up to beta."},
  {"speaker": "Jonathan", "start_time": 11.21813, "end_time": 11.30263, "text": "I think like we had like like the only way to do like an end-to-end flow of like using a template and presenting it."},
  {"speaker": "Jonathan", "start_time": 11.30603, "end_time": 11.35953, "text": "Um I think that took until like, I don't know if you remember John, but like maybe December, January or so."},
  {"speaker": "John", "start_time": 11.36403, "end_time": 11.36943, "text": "Yeah, it sounds right."},
  {"speaker": "Jonathan", "start_time": 11.37613, "end_time": 11.39013, "text": "Yeah, and then"},
  {"speaker": "Noah", "start_time": 11.39308, "end_time": 11.40688, "text": "This is 2023?"},
  {"speaker": "John", "start_time": 11.41213, "end_time": 11.43923, "text": "Yes, cuz we launched in 2024, yes."},
  {"speaker": "Jonathan", "start_time": 11.44353, "end_time": 11.44773, "text": "Yeah, yeah."},
  {"speaker": "Jonathan", "start_time": 11.44773, "end_time": 11.46663, "text": "So 2024 January."},
  {"speaker": "Jonathan", "start_time": 11.47593, "end_time": 11.54913, "text": "Um yeah, and then it was just a matter of like iterating and it was just like we were cranking through bugs for like two months going up to config and that was that was wild."},
  {"speaker": "Jonathan", "start_time": 11.54913, "end_time": 12.7503, "text": "I remember we had like like 300 or so like P zeros and so many that we added a new like stage of P zeros of like a P zero do this now."},
  {"speaker": "Noah", "start_time": 12.8178, "end_time": 12.11688, "text": "And then how big was the team in terms of like engineers, designers?"},
  {"speaker": "John", "start_time": 12.12353, "end_time": 12.12743, "text": "roughly."},
  {"speaker": "John", "start_time": 12.13493, "end_time": 12.18253, "text": "I think at its biggest, we had between 10 and 12 engineers."},
  {"speaker": "John", "start_time": 12.19173, "end_time": 12.22183, "text": "Um, I want to say two designers."},
  {"speaker": "John", "start_time": 12.23753, "end_time": 12.31753, "text": "And uh a dedicated person from research and a dedicated um someone from UX writing."},
  {"speaker": "Noah", "start_time": 12.32348, "end_time": 12.39908, "text": "But you you don't have any dedicated testers or QA folks, right? Like it's engineers doing the testing and and like, you know, testing thing."},
  {"speaker": "John", "start_time": 12.39908, "end_time": 12.40378, "text": "Correct, yeah."},
  {"speaker": "Noah", "start_time": 12.40808, "end_time": 12.44698, "text": "Oh so so you had the dedicated research person though. Tell me about that."},
  {"speaker": "John", "start_time": 12.45693, "end_time": 12.50293, "text": "Yeah, uh it was pretty instrumental in finding the direction of slides."},
  {"speaker": "John", "start_time": 12.51613, "end_time": 13.4383, "text": "A lot of what we explored is very similar to to Fig Jam, where it's like we're building for um both a non-designer audience and a designer audience."},
  {"speaker": "John", "start_time": 13.4683, "end_time": 13.20223, "text": "So a lot of what we did was like building out prototypes and then putting it in front of both designers and non-designers and seeing um what what resonated and then using that to to better form our uh POV on on direction."},
  {"speaker": "Jonathan", "start_time": 13.21043, "end_time": 13.38913, "text": "Yeah, I think one of the coolest like tools that we have internally are these front-end commit previews where um if you like push up a branch, um uh if you like push up or make a pull request, um that's like automatically deployed and you can send a link to other people internally to test that out."},
  {"speaker": "Jonathan", "start_time": 13.39163, "end_time": 13.58433, "text": "So, a really cool thing we were doing for these user research interviews was like making prototypes and then making prototypes internally with like non-production code and then like um shooting those over to uh research and then they were chatting with some folks internally and we had them use like these like prototypes."},
  {"speaker": "Noah", "start_time": 13.58433, "end_time": 14.5958, "text": "So so basically you just created a poll request with uh whatever data and then whatever was on your machine, the researchers could show, right?"},
  {"speaker": "Jonathan", "start_time": 14.6713, "end_time": 14.7163, "text": "Yeah."},
  {"speaker": "John", "start_time": 14.7163, "end_time": 14.7613, "text": "Yeah."},
  {"speaker": "John", "start_time": 14.7613, "end_time": 14.8113, "text": "Mhhm."},
  {"speaker": "Noah", "start_time": 14.8948, "end_time": 14.13638, "text": "Nice. And what is the text stack behind all of this behind Figma slides?"},
  {"speaker": "John", "start_time": 14.14073, "end_time": 14.18563, "text": "Yes, so slides is the same stack as Figment Design and Fig Jam."},
  {"speaker": "John", "start_time": 14.19033, "end_time": 14.29683, "text": "So everything that's in the canvas is rendered uh using what we refer to as full screen, which is our C++ code base and and and renderer."},
  {"speaker": "John", "start_time": 14.30463, "end_time": 14.42853, "text": "And then um what that does is it writes to a literal canvas element um in the DOM uh using either WebGL or Web GPU depending on browser support."},
  {"speaker": "John", "start_time": 14.43183, "end_time": 14.49803, "text": "So that's like a lot of the our main stack that that we work in when when building out the UI is in C++."},
  {"speaker": "John", "start_time": 14.50363, "end_time": 15.4113, "text": "Everything that's on top of uh the canvas, so like this left panel, the properties panel, this tool belt, um all the file menus, these are all in TypeScript and React."},
  {"speaker": "John", "start_time": 15.4513, "end_time": 15.12263, "text": "And then we uh have our own bindings layer that allows us to share state between what's in C++ and what's in web."},
  {"speaker": "Noah", "start_time": 15.13028, "end_time": 15.26188, "text": "So, uh you know, like I think React and type is is pretty straightforward, but do you also need to go into C++ to do some kind of UI changes or create new like four elements, those kind of things?"},
  {"speaker": "John", "start_time": 15.26188, "end_time": 15.26478, "text": "Yeah."},
  {"speaker": "John", "start_time": 15.26478, "end_time": 15.37048, "text": "I think all of the like teams that work on our our editors are um either 50/50 or or going to be more uh C++."},
  {"speaker": "Noah", "start_time": 15.37958, "end_time": 15.48648, "text": "that's that's you know, not a conventional uh UI technology, did you pick up C++ on on the go after you joined Figma or did or did you do it before?"},
  {"speaker": "John", "start_time": 15.49573, "end_time": 16.2863, "text": "I there are some people who like come in as like C++ experts and then there's other people who like come in as more like web uh experts. Um I I'm one of the people who did not know C++ before starting here."},
  {"speaker": "Jonathan", "start_time": 16.3643, "end_time": 16.12903, "text": "I also did not know C++ before. Well, I worked with C++ a lot in college um for like operating systems or like all these other like things, but how you'd use like C++ for like a college project or other things is very different from like how we use it at Figma."},
  {"speaker": "Jonathan", "start_time": 16.20883, "end_time": 16.24953, "text": "Um I feel like Figma is almost designed like like a game engine almost."},
  {"speaker": "Jonathan", "start_time": 16.24953, "end_time": 16.35943, "text": "But the Figma code base is just like it takes a it takes some time to like learn how to navigate it and how to find things around it and how to develop for it."},
  {"speaker": "Jonathan", "start_time": 16.35943, "end_time": 16.39643, "text": "So, I think there's a learning curve for everybody, but it's a very approachable learning curve."},
  {"speaker": "Jonathan", "start_time": 16.40323, "end_time": 16.51973, "text": "Um but a really cool thing like Figma's doing is they're trying to rewrite parts of like the full screen C++ um like code base to actually be in TypeScript. So it's like TypeScript chatting with um our C++ code."},
  {"speaker": "Noah", "start_time": 16.54728, "end_time": 16.55578, "text": "Is that what like bindings, right?"},
  {"speaker": "Jonathan", "start_time": 16.56153, "end_time": 16.58843, "text": "Yeah, with this bindings layer, which is really cool."},
  {"speaker": "Jonathan", "start_time": 16.58843, "end_time": 17.29093, "text": "So like, um, one example of those is, um, all the little like blue lines. Yeah, like if I'm like hanging out in grid view, um, all of these like plus buttons and like these guys, these guys are rendered on the canvas, but, um, they're using, they're written in TypeScript."},
  {"speaker": "Jonathan", "start_time": 17.18983, "end_time": 17.28893, "text": "Um, and then that TypeScript is like, um interacting with the canvas, which is of course being rendered by, um like TypeScript and React."},
  {"speaker": "Noah", "start_time": 17.30298, "end_time": 17.40988, "text": "And then one interesting thing that you previously mentioned is that Figma has this pretty cool tool, uh C++ web assembly editor to help debug TypeScript as as you're building it."},
  {"speaker": "Noah", "start_time": 17.41238, "end_time": 17.43968, "text": "What is this tool? And this sounds very, very unique to Figma."},
  {"speaker": "Jonathan", "start_time": 17.44883, "end_time": 17.52963, "text": "It's sweet. We have this um there's this Chrome extension called like dwarf Wasm debugging um that like we've installed."},
  {"speaker": "Jonathan", "start_time": 17.52963, "end_time": 18.3953, "text": "And um what's really crazy is like you you can debug like C++ inside of like Chrome itself um inside of just like the um inspector panel."},
  {"speaker": "Jonathan", "start_time": 18.3953, "end_time": 18.22293, "text": "And like sometimes if I have to like figure out a gnarly like a gnarly bug between like our carousel, which is written in TypeScript and like how that's chatting with the editor, which is written inside of C++, I can debug both our like web assembly bundle as well as React at like the same time, which is really cool."},
  {"speaker": "Jonathan", "start_time": 18.22723, "end_time": 18.25303, "text": "Like being able to set break points between the two."},
  {"speaker": "Noah", "start_time": 18.25738, "end_time": 18.30058, "text": "And and this is like custom tooling obviously that that you built, right? Cuz"},
  {"speaker": "John", "start_time": 18.30058, "end_time": 18.33258, "text": "No, no, this is um it's open, it's like a part of Chromium."},
  {"speaker": "Noah", "start_time": 18.33928, "end_time": 18.42088, "text": "Oh, so Chromium supports debugging like custom C++ uh web assembly libraries?"},
  {"speaker": "John", "start_time": 18.42763, "end_time": 18.43613, "text": "Yeah, yeah."},
  {"speaker": "John", "start_time": 18.43883, "end_time": 18.53513, "text": "It's the like mental model is very similar to like if you're using compiled or transpiled JavaScript and source maps. It's the like analogous mental model."},
  {"speaker": "John", "start_time": 18.53513, "end_time": 18.56843, "text": "You can make a special web assembly."},
  {"speaker": "John", "start_time": 18.57353, "end_time": 19.1743, "text": "It's maybe underwhelming to show, which is I think what makes it really cool."},
  {"speaker": "John", "start_time": 19.2153, "end_time": 19.8843, "text": "Um, so here I just have like you'll notice I have like a uh a TypeScript file next to a C++ file."},
  {"speaker": "John", "start_time": 19.8843, "end_time": 19.10733, "text": "Oh, right?"},
  {"speaker": "Noah", "start_time": 19.11328, "end_time": 19.14858, "text": "Okay, and then obviously you need to have a a debug build for this to to work, right?"},
  {"speaker": "John", "start_time": 19.15343, "end_time": 19.21633, "text": "Yeah, yeah. So there's a special type of build that you can build that generate dwarf symbols."},
  {"speaker": "John", "start_time": 19.22003, "end_time": 19.30173, "text": "And then the Chrome extension can consume those symbols and and map it to source files on your computer."},
  {"speaker": "Noah", "start_time": 19.31278, "end_time": 19.31838, "text": "That is so cool."},
  {"speaker": "John", "start_time": 19.32683, "end_time": 19.34903, "text": "Yeah, and things like like break points work."},
  {"speaker": "John", "start_time": 19.35803, "end_time": 19.45903, "text": "Um not 100% of things work, um but you can like inspect different objects and like read read values of primitive things for sure."},
  {"speaker": "Noah", "start_time": 19.46828, "end_time": 19.47458, "text": "Like"},
  {"speaker": "Noah", "start_time": 19.47918, "end_time": 20.8678, "text": "I mean, I I I worked with like back very long time ago when I worked on Skype for Xbox One, we had HTML and JavaScript for whatever reason and C++. There was a C++ bridge. And it was, you know, the only way we could debug the C++ code is send it over to JavaScript, do debug log send."},
  {"speaker": "Noah", "start_time": 20.8678, "end_time": 20.12008, "text": "Like I what I would have not given to have this tooling."},
  {"speaker": "John", "start_time": 20.12008, "end_time": 20.13818, "text": "Yeah, it's super cool, yeah."},
  {"speaker": "John", "start_time": 20.14398, "end_time": 20.21938, "text": "I think before this was supported, uh it was before I joined Figma, so this has been around for a few years at least."},
  {"speaker": "John", "start_time": 20.22758, "end_time": 20.35168, "text": "Um people would build uh we have a build that you can run within Xcode that like launches Figma and then you can use Xcode to to debug the C++."},
  {"speaker": "John", "start_time": 20.35798, "end_time": 20.41148, "text": "But now I think most most uh engineers here are are using this."},
  {"speaker": "Noah", "start_time": 20.42188, "end_time": 20.51008, "text": "I think it just comes to show that even when you have like a more unique tech sack, it's pretty cool how like some of these things are are standards and they exist. You just need to find them because as you said, like I I kind of assume that you must have built it yourself, but no, it's uh it it's a universal uh chrome"},
  {"speaker": "Noah", "start_time": 20.57528, "end_time": 20.58398, "text": "plugin or?"},
  {"speaker": "John", "start_time": 20.58398, "end_time": 20.58758, "text": "Yeah."},
  {"speaker": "Jonathan", "start_time": 20.59203, "end_time": 21.2623, "text": "Yeah, one really cool example of like how I used the debugger, um was there was like one time where we had this variable that was getting set inside of um inside of our web code base."},
  {"speaker": "Jonathan", "start_time": 21.2623, "end_time": 21.14763, "text": "It was like a configuration variable between like, are you in UI2 or are you in UI3? Um and um we were seeing this really weird bug where you were both in like the carousel and the grid at the same time."},
  {"speaker": "Jonathan", "start_time": 21.14763, "end_time": 21.16573, "text": "And we were like, whoa, what's going on?"},
  {"speaker": "Jonathan", "start_time": 21.16573, "end_time": 21.17183, "text": "Why can't we repro this?"},
  {"speaker": "Jonathan", "start_time": 21.17183, "end_time": 21.22733, "text": "Um and after like a good bit of investigation, um and using this debugger very specifically to see like when some initialization code that like set you in the editor to be in grid view or single slide view."},
  {"speaker": "Jonathan", "start_time": 21.22733, "end_time": 21.27943, "text": "Um I put a break point there and then I put a break point on this code that was like, are you in UI2 or are you in UI3, which is being set in web."},
  {"speaker": "Jonathan", "start_time": 21.28233, "end_time": 21.33893, "text": "I was able to see we were having like a crazy race condition going on. Um"},
  {"speaker": "Noah", "start_time": 21.33893, "end_time": 21.34313, "text": "Wow."},
  {"speaker": "Jonathan", "start_time": 21.34863, "end_time": 21.37683, "text": "And the only way I could done that was with like this debugger."},
  {"speaker": "Noah", "start_time": 21.37978, "end_time": 21.42108, "text": "Yeah, cuz now you could debug like the two code bases running parallel pretty much."},
  {"speaker": "Noah", "start_time": 21.42728, "end_time": 21.43228, "text": "That's awesome."},
  {"speaker": "Noah", "start_time": 21.44448, "end_time": 22.14768, "text": "And so what were some unique challenges building slides, Figma slides compared, you know, things that you you don't really come across on other projects. I you know, I'm assuming you you built a bunch of web projects, you know, there's a bunch of kind of usual suspects from like UI layouts to like build, like how are we going to build or what linting are we going to use."},
  {"speaker": "Noah", "start_time": 22.14768, "end_time": 22.29728, "text": "But this didn't seem like it sounds like it's not your typical project, this one."},
  {"speaker": "John", "start_time": 22.30658, "end_time": 22.36048, "text": "Yeah, I think one of the main challenges really was um something that we've already touched upon."},
  {"speaker": "John", "start_time": 22.36048, "end_time": 22.42268, "text": "which was how we built single slide view to to be literally just moving the view port, right?"},
  {"speaker": "John", "start_time": 22.42698, "end_time": 22.57138, "text": "If you were to build a slides product from scratch, I don't think that's the way that you would approach it, right? where you're like, okay, well what if we had an infinite canvas and slides had XY coordinates on the canvas and then we can like zoom in, you know."},
  {"speaker": "John", "start_time": 22.57938, "end_time": 23.168, "text": "Um, so that was like a unique set of challenges."},
  {"speaker": "John", "start_time": 23.168, "end_time": 23.17548, "text": "Uh, but what's really cool, not only that it works, but that it allows um all of our existing uh tooling around like multiplayer cursors and things like that to to to kind of just work, right?"},
  {"speaker": "Noah", "start_time": 23.17948, "end_time": 23.22468, "text": "And and what what is multiplayer cursor for those not familiar with, you know, Figma lingo?"},
  {"speaker": "John", "start_time": 23.23298, "end_time": 23.30988, "text": "Yes, so multiplayer cursors are when someone else is editing the same thing, you can see exactly what they are editing."},
  {"speaker": "John", "start_time": 23.30988, "end_time": 23.36598, "text": "Right? So if Noah makes a selection, uh uh we can see that Noah has has that node selected."},
  {"speaker": "John", "start_time": 23.37558, "end_time": 23.42888, "text": "Um and this works regardless of if I'm in single slide view or if I'm in grid view, right?"},
  {"speaker": "Noah", "start_time": 23.43628, "end_time": 24.12258, "text": "And then behind the scenes, like how how does multiplayer work? There must be some sort of TCP connection open and you know, like it must be talking to the server. Is is it happening on a server or is it is it peer-to-peer?"},
  {"speaker": "John", "start_time": 24.1748, "end_time": 24.288, "text": "Uh it is happening on a on a server, yeah."},
  {"speaker": "John", "start_time": 24.288, "end_time": 24.4078, "text": "This is I get do my best to answer it."},
  {"speaker": "John", "start_time": 24.4678, "end_time": 24.15668, "text": "Our uh co-founder Evan wrote a great blog post on the Figma engineering blog about multiplayer and definitely much more of a subject matter expert than I am. But at a at a at a top level, we have um a rust service running that like um um all edits propagate through and it it it handles conflict resolution and sends thing back down."},
  {"speaker": "John", "start_time": 24.29988, "end_time": 24.33558, "text": "Each each client maintains a web socket connection with it."},
  {"speaker": "Noah", "start_time": 24.33968, "end_time": 24.34668, "text": "And and basically it's in the library, right?"},
  {"speaker": "Noah", "start_time": 24.34668, "end_time": 24.44688, "text": "So as long as you use this C++ library, it's built in. So so I guess was this was this one of the reasons you decided to like, all right, let's, you know, hack around it, like zoom in, keep keep using it?"},
  {"speaker": "John", "start_time": 24.45188, "end_time": 24.53698, "text": "Yeah, yeah. A lot of it's multiplayer, but um I think more more broadly, a lot of it's just building on the Figma platform, right?"},
  {"speaker": "John", "start_time": 24.53698, "end_time": 25.118, "text": "Like you can copy anything from Figma design and paste it into slides and it'll just work."},
  {"speaker": "John", "start_time": 25.118, "end_time": 25.1008, "text": "And same with going the other way, right? And uh uh that is really important to us."},
  {"speaker": "John", "start_time": 25.5758, "end_time": 25.12788, "text": "As we're building these new products, right? Like copy paste works between Fig Jam and design, it works between design and slides."},
  {"speaker": "John", "start_time": 25.13188, "end_time": 25.23698, "text": "And so now there's this nice um uh it doesn't matter which editor you start in, you have access to the same things that you created in in any of the other files."},
  {"speaker": "John", "start_time": 25.24728, "end_time": 25.30608, "text": "Uh and that's sort of like a second area of complication is it's like we call this interrup, right?"},
  {"speaker": "John", "start_time": 25.31118, "end_time": 25.41198, "text": "Um uh but what that means is that, you know, like Fig Jam has a bunch of node types that were made specific to Fig Jam, like stickies for example."},
  {"speaker": "John", "start_time": 25.41928, "end_time": 25.51568, "text": "Uh but because we want interrupt to feel so seamless, what this means is that if you add a new node type to a specific editor, um uh it has to work everywhere, right?"},
  {"speaker": "John", "start_time": 25.52038, "end_time": 25.57648, "text": "Like it would be a little bit of a bummer if you went to copy a sticky and it didn't, you know?"},
  {"speaker": "John", "start_time": 25.59418, "end_time": 26.10728, "text": "Um and so this ability to like bring things between products, um is really cool for our users, right? Uh but, you know, definitely adds complexity to the code."},
  {"speaker": "Noah", "start_time": 26.11728, "end_time": 26.26788, "text": "And and as a dev what what does this mean? for for you to support stickies? Like I'm assuming there must be some data type somewhere of like all the things supported and then you need to figure out like how to visualize it or how to draw it or how to like how how how it maps? Like how how can we imagine? Because I I I feel this is"},
  {"speaker": "John", "start_time": 26.30258, "end_time": 26.36848, "text": "like interrup is is something that most devs don't need to worry about until you do."},
  {"speaker": "John", "start_time": 26.37348, "end_time": 26.48288, "text": "Yeah, there there's something like um there's like an irony. I feel like as as other companies become multi-product companies, you like kind of do your best to like separate the products more, you know?"},
  {"speaker": "John", "start_time": 26.48798, "end_time": 26.56828, "text": "But what we really lean into is the opposite, right? So like with with each new product, we like really want things to be seamless, you know?"},
  {"speaker": "John", "start_time": 26.57568, "end_time": 27.1088, "text": "Um as far as what the code looks like, a lot of what's in the full screen code base, which is our our our C++ code base is the same."},
  {"speaker": "John", "start_time": 27.7088, "end_time": 27.10438, "text": "uh code running regardless of which editor that you're in."},
  {"speaker": "John", "start_time": 27.10938, "end_time": 27.21638, "text": "Um a lot of the differences are are in the website, right? So like we have a a different root react tree for for each editor and that's how things are very visually different."},
  {"speaker": "John", "start_time": 27.22388, "end_time": 27.32198, "text": "Um but the code running the what powers that main canvas is the same Wam bundle for for each of the editors."},
  {"speaker": "John", "start_time": 27.32728, "end_time": 27.39638, "text": "Then of course, you know, there are differences and so differences are sometimes expressed in"},
  {"speaker": "John", "start_time": 27.39638, "end_time": 27.50578, "text": "a concept that we call mouse behaviors. Um, and so mouse behaviors are you know, it's sometimes hard not to use the word in a definition."},
  {"speaker": "John", "start_time": 27.50578, "end_time": 27.54728, "text": "They're the behaviors that run for the mouse, right?"},
  {"speaker": "John", "start_time": 27.54728, "end_time": 28.788, "text": "Uh so like I'm dragging what happens, right? And so a lot of what happens in fig jam, right? are or we like to snap things to different uh um"},
  {"speaker": "John", "start_time": 28.3088, "end_time": 28.8188, "text": "pixel grid, so that things like lock in more, whereas design is more free form, right?"},
  {"speaker": "John", "start_time": 28.8618, "end_time": 28.15378, "text": "So for things like that, we can check which editor that you're in and like uh uh respond accordingly."},
  {"speaker": "Jonathan", "start_time": 28.16173, "end_time": 28.32553, "text": "Yeah, one example of like a different mouse behavior that we have. Like inside of Figma design, if I were to like try to drag some like things inside of an auto layout container, um we have like this behavior over here where like um they'll shuffle around in real time."},
  {"speaker": "Jonathan", "start_time": 28.33053, "end_time": 28.51993, "text": "But if I were to jump into a slides file, um let me go share my slides tab. Um we have our own sort of uh unique behavior um for handling like this drag. Like we have our little like previews over here. Um we have like the ability to add new rows down here."},
  {"speaker": "Jonathan", "start_time": 28.52603, "end_time": 28.59083, "text": "Um all of this is done via like our own like slide specific mouse behaviors. Um"},
  {"speaker": "Jonathan", "start_time": 28.59083, "end_time": 28.59373, "text": "Yeah."},
  {"speaker": "Noah", "start_time": 28.59698, "end_time": 29.748, "text": "Okay. Interesting."},
  {"speaker": "John", "start_time": 29.748, "end_time": 29.19288, "text": "So each editor type can like register a unique set of mouse behaviors is how a lot of differences are expressed."},
  {"speaker": "Noah", "start_time": 29.8818, "end_time": 29.14368, "text": "this this is pretty interesting and it sounds just very very unique to to Figma."},
  {"speaker": "Noah", "start_time": 29.14938, "end_time": 29.32538, "text": "I but I I guess, you know, like if if we were to peak in the internals of like any company that has like a big product that that has evolved, we've obviously something might see something similar, but this is just fascinating on how, you know, things become really kind of unique for a good reason and home grown."},
  {"speaker": "John", "start_time": 29.33128, "end_time": 29.39818, "text": "This goes back to like Noah mentioned that um uh a lot of the Figma code looks like a game engine."},
  {"speaker": "John", "start_time": 29.40238, "end_time": 29.46938, "text": "I think that this like mouse behavior concept is is like taken from how uh uh a lot of game engines run."},
  {"speaker": "John", "start_time": 29.47498, "end_time": 29.56778, "text": "Right? So there's like a a priority list of mouse behaviors, if one of them accepts the event, it doesn't go to to the next one, you know."},
  {"speaker": "John", "start_time": 29.57338, "end_time": 30.7608, "text": "Um so it's like our own sort of like delegation pattern that often uh the browser would handle for you, but because we're running in C++, it's all written from scratch."},
  {"speaker": "Noah", "start_time": 30.7608, "end_time": 30.29468, "text": "Well, you do have a bit more freedom. I I just had a I was just recently talking with uh the well my brother, the founder of Craft Docs, who decided to build their own UI, not using the system UI and then I mean it's a lot more work, but then you get a bunch of freedom to do whatever you want to do in terms of animation or what the system might not be able to do or the system elements might limit you."},
  {"speaker": "John", "start_time": 30.29988, "end_time": 30.34868, "text": "Yeah, yeah, yeah, yeah, for sure. It's one of those like with great power comes great responsibility things."},
  {"speaker": "John", "start_time": 30.35228, "end_time": 30.50348, "text": "Cuz like something that we do um right is like we render text ourselves, right? So we have code that like looks at the font and it like computes the geometry of the glyphs and then based on that geometry renders out the pixels, you know?"},
  {"speaker": "John", "start_time": 30.50808, "end_time": 31.7938, "text": "And this is great because it guarantees that regardless of what browser you're using, uh what OS you're using, you know, if you're looking at a a Figma file, we can guarantee that like it'll look the same, which is very important when you're making a a design tool, right?"},
  {"speaker": "John", "start_time": 31.8338, "end_time": 31.23068, "text": "But that means that there's a lot that we don't get for free, right? So like we built and launched um I think last year or the year before, spell check, right? Just like the red squiggly that tells you that, you know, something is misspelled and that was like a huge undertaking, you know?"},
  {"speaker": "John", "start_time": 31.24638, "end_time": 31.32848, "text": "Or like we we we added support for bidirectional fonts and that was all like like we had to add it, you know, because we couldn't lean on the browser."},
  {"speaker": "Noah", "start_time": 31.33755, "end_time": 31.35075, "text": "Hey developers,"},
  {"speaker": "Noah", "start_time": 31.35075, "end_time": 31.35645, "text": "we've all been there."},
  {"speaker": "Noah", "start_time": 31.36235, "end_time": 31.39645, "text": "It's 3:00 a.m. and your phone blares, jolting you awake."},
  {"speaker": "Noah", "start_time": 31.40315, "end_time": 31.41385, "text": "Another alert."},
  {"speaker": "Noah", "start_time": 31.42065, "end_time": 31.48855, "text": "You scramble to troubleshoot, but the complexity of your microservice environment makes it nearly impossible to pinpoint the problem quickly."},
  {"speaker": "Noah", "start_time": 31.50015, "end_time": 31.58645, "text": "That's why Chronosphere is on a mission to help you take back control with differential diagnosis, a newly distributed tracing feature that takes the guess work out of troubleshooting."},
  {"speaker": "Noah", "start_time": 31.59525, "end_time": 32.7385, "text": "With just one click, DDX automatically analyzes all spanside dimensions related to a service, pinpointing the most likely cause of the issue."},
  {"speaker": "Noah", "start_time": 32.8075, "end_time": 32.10785, "text": "Don't let troubleshooting drag you into the early hours of the morning."},
  {"speaker": "Noah", "start_time": 32.11365, "end_time": 32.13725, "text": "Just DD exit and resolve issues faster."},
  {"speaker": "Noah", "start_time": 32.14575, "end_time": 32.22885, "text": "See why Chronosphere was named a leader in the 2024 Gartner Magic Quadrant for observability platforms at chronosphere.io/pragmatic."},
  {"speaker": "Noah", "start_time": 32.23675, "end_time": 32.27515, "text": "That is chronosphere.io/pragmatic."},
  {"speaker": "Noah", "start_time": 32.28528, "end_time": 32.48118, "text": "It is interesting because now I remember, you know, like just one everyday thing that people might come across is just a PDF file is when you when you open it uh for editing with uh with anything really. And then you need to have your fonts. And those fonts needs to be installed at the OS level and if they're not, you know, you're out of luck and it'll look something weirdly different."},
  {"speaker": "Noah", "start_time": 32.48118, "end_time": 32.49768, "text": "Yeah, trade-offs everywhere."},
  {"speaker": "John", "start_time": 32.50088, "end_time": 32.51738, "text": "Yeah, yeah, yeah, yeah, for sure."},
  {"speaker": "Noah", "start_time": 32.52318, "end_time": 32.56028, "text": "And what what are type of things were tricky about this project?"},
  {"speaker": "Jonathan", "start_time": 32.56913, "end_time": 33.2263, "text": "Yeah, um, I could chat a little bit about like how single slide view had some really interesting challenges."},
  {"speaker": "Noah", "start_time": 33.2263, "end_time": 33.3863, "text": "Oh, I love that."},
  {"speaker": "Noah", "start_time": 33.4863, "end_time": 33.6363, "text": "Because this is something I I I don't think most people would assume."},
  {"speaker": "Jonathan", "start_time": 33.6363, "end_time": 33.7263, "text": "Yeah."},
  {"speaker": "Noah", "start_time": 33.7833, "end_time": 34.153, "text": "Like it it how hard could it be? It's it's this"},
  {"speaker": "Noah", "start_time": 34.153, "end_time": 34.16503, "text": "And actually you you said earlier, right?"},
  {"speaker": "Noah", "start_time": 34.16503, "end_time": 34.16793, "text": "That, oh,"},
  {"speaker": "Noah", "start_time": 34.16793, "end_time": 34.17133, "text": "we knew this would be pretty simple."},
  {"speaker": "Noah", "start_time": 34.17133, "end_time": 34.17503, "text": "That's why we left it for later."},
  {"speaker": "Jonathan", "start_time": 34.18253, "end_time": 34.20763, "text": "Yeah, by simple, it's very relative."},
  {"speaker": "Noah", "start_time": 34.20998, "end_time": 34.21268, "text": "Yeah."},
  {"speaker": "Jonathan", "start_time": 34.21893, "end_time": 34.43033, "text": "Um but yeah, like single slide views in this really interesting spot where um like collapse state, um like collapsing slides and expanding them, we don't want to like save that to your file at all. Um like we'd want to save stuff like the the order of slides in the grid to the file, but we don't want to save stuff like are these collapsed or not to the file."},
  {"speaker": "Jonathan", "start_time": 34.43323, "end_time": 34.51583, "text": "So, in order to render um like this this carousel over here, we've got a bunch of state that like lives inside of web, and then a bunch of state that lives inside of the editor inside of full screen."},
  {"speaker": "Jonathan", "start_time": 34.51583, "end_time": 35.3193, "text": "And we got to like have a bunch of complicated code to um sort of like coales those in order to figure out like what to render here."},
  {"speaker": "Jonathan", "start_time": 35.3913, "end_time": 36.1933, "text": "Um on top of that, there's like a ton of crazy technical challenges to solve in terms of like dragging slides around, um and like making sure that like if I were to drag um these three slides, which like right now they're their own row in the slide grid."},
  {"speaker": "Jonathan", "start_time": 36.1933, "end_time": 36.26793, "text": "If I want to like drag this title this this slide out and then like move it into this row,"},
  {"speaker": "Jonathan", "start_time": 36.27573, "end_time": 37.173, "text": "um we got to make sure like this row is still preserved up there."},
  {"speaker": "Jonathan", "start_time": 37.173, "end_time": 37.40513, "text": "Um but if I were to drag this entire row and like make it sort of a child, we got to like delete that first row and then like combine this row together."},
  {"speaker": "Jonathan", "start_time": 37.40513, "end_time": 37.57693, "text": "So, there's a lot of like really interesting algorithm stuff to like um coales like sort of changes from the carousel um inside of web as well as like other users like dragging stuff around inside of full screen, maybe across like multiple rows or something and like combine those two together in a way that's like that feels like safe for multiplayer."},
  {"speaker": "Jonathan", "start_time": 37.57693, "end_time": 37.58473, "text": "So,"},
  {"speaker": "Jonathan", "start_time": 37.58953, "end_time": 37.59243, "text": "yeah,"},
  {"speaker": "Jonathan", "start_time": 37.59243, "end_time": 37.59643, "text": "I"},
  {"speaker": "John", "start_time": 37.59643, "end_time": 37.59933, "text": "Yeah,"},
  {"speaker": "John", "start_time": 37.59933, "end_time": 38.1733, "text": "yeah. This is a good thing to like yeah. Yeah."},
  {"speaker": "John", "start_time": 38.1733, "end_time": 39.1513, "text": "Yeah, so like this like intersection of like editing and multiplayer is like a really interesting part of the Figma stack. Um, everything is multiplayer first."},
  {"speaker": "John", "start_time": 39.2013, "end_time": 39.23763, "text": "For things to be local, you have to like opt out of it being sent."},
  {"speaker": "John", "start_time": 39.24283, "end_time": 39.51743, "text": "But what's interesting about um reordering stuff in single slide view is we do um there's a bunch of operations that you can do that can move like a lot of slides at once."},
  {"speaker": "John", "start_time": 39.51743, "end_time": 40.333, "text": "Um but because we want it to be multiplayer friendly, there's a lot of work under the scene"},
  {"speaker": "John", "start_time": 40.333, "end_time": 41.6393, "text": "or under under behind the scene, under the hood, that's happening to like perform the the minimum number of mutations possible because the more mutations that you do, the less multiplayer friendly something is, right?"},
  {"speaker": "John", "start_time": 41.6903, "end_time": 43.8143, "text": "So like you can if you're like implode Yeah, if you're picturing the slide grid, right? And if we move the bottom row to the top in a in a naive way, um when you do that mutation,"},
  {"speaker": "John", "start_time": 43.8143, "end_time": 46.6513, "text": "you're changing every single slide's XY coordinate, right? Well, that's the most obvious thing to do, right?"},
  {"speaker": "John", "start_time": 46.6513, "end_time": 47.1783, "text": "Yeah. And that's how slides worked for a a while."},
  {"speaker": "John", "start_time": 47.1783, "end_time": 49.6953, "text": "Um, but then how we ended up solving this is our like ethos was was to do the minimum number of mutations, right? Like ideally the number of mutations or the number of slides that you drag."},
  {"speaker": "John", "start_time": 49.6953, "end_time": 56.5473, "text": "Um, and the way that we achieved this under the hood is actually using um the auto layout nodes within Figma design. So what I mean by that is each row is in its own node, right? We call it the slide row node."},
  {"speaker": "John", "start_time": 57.043, "end_time": 58.743, "text": "And then each of those nodes is within uh a slide grid node."},
  {"speaker": "John", "start_time": 58.743, "end_time": 59.2533, "text": "Right? So each each slide is now two levels deep."},
  {"speaker": "John", "start_time": 59.703, "end_time": 1.1.7093, "text": "Um, we have an existing construct called parent index, which was made for reordering stuff within frames and reordering stuff within auto layout."},
  {"speaker": "John", "start_time": 1.1.993, "end_time": 1.10433, "text": "Um, and what a parent index is is it's a struct that has a a reference to the parent's ID as well as uh uh an index represented as a float from zero to one."},
  {"speaker": "John", "start_time": 1.10433, "end_time": 1.14183, "text": "And so by doing it this way, if you reorder just one thing for example,"},
  {"speaker": "John", "start_time": 1.14183, "end_time": 1.18323, "text": "you only have one mutation, right? So I change something from the beginning to the end."},
  {"speaker": "John", "start_time": 1.18323, "end_time": 1.19503, "text": "Only that thing's parent index has to change."},
  {"speaker": "John", "start_time": 1.19503, "end_time": 1.21063, "text": "And then each client is responsible for recomputing the layout."},
  {"speaker": "John", "start_time": 1.21063, "end_time": 1.22503, "text": "Right? No, and then just to like move things around, you know?"},
  {"speaker": "John", "start_time": 1.22503, "end_time": 1.23833, "text": "just so I understand the goal is that you send the mutation to the server saying here's what changed."},
  {"speaker": "John", "start_time": 1.23833, "end_time": 1.29893, "text": "And then that server sends it to all the clients and then all the clients execute it as well. Yeah. Okay. And so, you know, there's like probably low risk that everyone's going to be mass reordering slides at the same time."},
  {"speaker": "John", "start_time": 1.29893, "end_time": 1.30363, "text": "Yeah."},
  {"speaker": "John", "start_time": 1.30363, "end_time": 1.31693, "text": "But there is a higher risk of like, you know, people lose internet connection."},
  {"speaker": "John", "start_time": 1.31693, "end_time": 1.38383, "text": "And so what we do is like if you're offline and you do a bunch of edits, then when you come back online, there's like a lot of resolution that needs to happen."},
  {"speaker": "John", "start_time": 1.38763, "end_time": 1.44853, "text": "So doing this minimum number of mutations is like is the goal. So everything's two levels deep, they're all using parent index."},
  {"speaker": "John", "start_time": 1.44853, "end_time": 1.50713, "text": "And then we wrote code that I imagine looks kind of similar to the React reconciler where where like, okay, we have this, we have the beginning state of the drag and we have the end state of the drag."},
  {"speaker": "John", "start_time": 1.50993, "end_time": 1.54343, "text": "What's the minimum number of mutations to get from A to B?"},
  {"speaker": "John", "start_time": 1.54343, "end_time": 1.54833, "text": "And like that's what we propagate."},
  {"speaker": "Jonathan", "start_time": 1.55663, "end_time": 1.57083, "text": "I remember like, um,"},
  {"speaker": "Jonathan", "start_time": 1.57083, "end_time": 1.59053, "text": "when before we had all these optimizations to figure out the minimum number of things to recompute,"},
  {"speaker": "Jonathan", "start_time": 1.59053, "end_time": 2.8653, "text": "um it was like it was pretty gnarly. Um like we I remember there was like a like a big like all hands that was happening internally and then we just like got a report that like, hey, a bunch of slides like disappeared or something. And then we were like, oh my goodness, chaos mode. Um so we had to do a lot of digging to sort of figure out theories as to how this might have happened."},
  {"speaker": "Jonathan", "start_time": 2.8653, "end_time": 2.15143, "text": "Because like it's really hard to reproduce like 10 people being in the same file at once and then one of them losing connection while they do like a big like slide reorder."},
  {"speaker": "Jonathan", "start_time": 2.15143, "end_time": 2.15513, "text": "So"},
  {"speaker": "Noah", "start_time": 2.15513, "end_time": 2.21373, "text": "I mean this this sounds like a proper, you know, like hardcore engineering problem where it's like distributed systems, like state, uh reconciliation, playback, conflicts."},
  {"speaker": "Noah", "start_time": 2.21373, "end_time": 2.22673, "text": "How how to do conflicts?"},
  {"speaker": "John", "start_time": 2.22673, "end_time": 2.23083, "text": "Well we were"},
  {"speaker": "John", "start_time": 2.23083, "end_time": 2.27373, "text": "while we were working on this, we often joked like this would be a really mean interview question."},
  {"speaker": "Noah", "start_time": 2.28693, "end_time": 2.30663, "text": "Or or a really good one if someone can bring something to the table."},
  {"speaker": "Noah", "start_time": 2.30663, "end_time": 2.31643, "text": "It's like, all right."},
  {"speaker": "John", "start_time": 2.31643, "end_time": 2.32403, "text": "Yeah."},
  {"speaker": "Noah", "start_time": 2.32403, "end_time": 2.32843, "text": "You need to join."},
  {"speaker": "Noah", "start_time": 2.35743, "end_time": 2.37093, "text": "And how do you test all this?"},
  {"speaker": "Noah", "start_time": 2.37433, "end_time": 2.40893, "text": "So, like I I'm specifically curious of like, okay, you know, like traditional like crud apps."},
  {"speaker": "Noah", "start_time": 2.41273, "end_time": 2.51043, "text": "You typically have obviously you manually test that does it work. You add your automated tests, unit tests, later you might add integration test and then they're there to to guard against regressions and now, you know, like it's and that you're you feel pretty happy and thumbs up, it it'll kind of work, especially when it's like a back end heavy thing that doesn't have much UI."},
  {"speaker": "Noah", "start_time": 2.51433, "end_time": 2.52403, "text": "How does it work in your case?"},
  {"speaker": "John", "start_time": 2.53213, "end_time": 2.54783, "text": "Yeah, we have all of those."},
  {"speaker": "John", "start_time": 2.55373, "end_time": 2.59503, "text": "Um for this space for this case specifically, we do have I think it's our most unit tested part of slides."},
  {"speaker": "John", "start_time": 2.59503, "end_time": 3.243, "text": "This like grid reconciliation."},
  {"speaker": "John", "start_time": 3.553, "end_time": 3.10943, "text": "Um and we have every case that has ever caused a bug report. Um that we then assert the mutations that have happened."},
  {"speaker": "John", "start_time": 3.11323, "end_time": 3.16403, "text": "So we like perform the reorder and then we verify on like every single slide after the reorder, like"},
  {"speaker": "John", "start_time": 3.16403, "end_time": 3.19033, "text": "are you the same?"},
  {"speaker": "John", "start_time": 3.19333, "end_time": 3.20183, "text": "Has your index changed?"},
  {"speaker": "Jonathan", "start_time": 3.20773, "end_time": 3.23963, "text": "I think another interesting part of slides is some of our test cases are like vibes in a way."},
  {"speaker": "Jonathan", "start_time": 3.24323, "end_time": 3.29673, "text": "Um to to dig into this a little bit, um especially when we were originally building the product and still like today, we do a lot of like testing by like seeing how people feel about a subtle change."},
  {"speaker": "Jonathan", "start_time": 3.29673, "end_time": 3.31743, "text": "Um I remember one of the really interesting things I was um iterating on was like um how does the view port like feel inside of um like single slide view?"},
  {"speaker": "Jonathan", "start_time": 3.31743, "end_time": 3.34393, "text": "And um it's like how far can you zoom out?"},
  {"speaker": "Jonathan", "start_time": 3.34773, "end_time": 3.35643, "text": "How far can you zoom in?"},
  {"speaker": "Jonathan", "start_time": 3.35933, "end_time": 3.45503, "text": "Um as you zoom out, when you can see that the slide gets centered, but like when do you start recentering the slide? How far are like the margins here and here?"},
  {"speaker": "Jonathan", "start_time": 3.45933, "end_time": 3.52913, "text": "And to do a lot of like this testing, um and you can see like it also scales with like the view port."},
  {"speaker": "Jonathan", "start_time": 3.52913, "end_time": 3.57643, "text": "But um to do a lot of this testing, um this was a lot of like sending two options over to designers or um putting one option in our like internal um like staging environment."},
  {"speaker": "Jonathan", "start_time": 3.57643, "end_time": 4.433, "text": "And then like seeing how people felt about it as they like naturally use slides like um during their like day-to-day in Figma."},
  {"speaker": "Jonathan", "start_time": 4.823, "end_time": 4.14133, "text": "Um so there's a lot of like um trying like things out, trying like one or two different options, and then like getting some feedback on those prototypes from designers or product people around the company."},
  {"speaker": "Jonathan", "start_time": 4.14413, "end_time": 4.19203, "text": "And then going for just like whichever one um people either preferred."},
  {"speaker": "Jonathan", "start_time": 4.19463, "end_time": 4.21543, "text": "Or like whichever one people um"},
  {"speaker": "Jonathan", "start_time": 4.21543, "end_time": 4.23763, "text": "did not like like less than the other one."},
  {"speaker": "Noah", "start_time": 4.23763, "end_time": 4.24313, "text": "Yeah, that"},
  {"speaker": "Noah", "start_time": 4.24313, "end_time": 4.26463, "text": "that is different, right? From from your usual"},
  {"speaker": "Noah", "start_time": 4.26463, "end_time": 4.27173, "text": "development"},
  {"speaker": "John", "start_time": 4.27603, "end_time": 4.33683, "text": "Yeah, yeah, for sure. Something that like I really love about working at Figma is just like how much we use the products that we make, right?"},
  {"speaker": "John", "start_time": 4.33683, "end_time": 4.34803, "text": "Like we like really live in them."},
  {"speaker": "John", "start_time": 4.35223, "end_time": 4.44213, "text": "Um and that really translates to a lot of the like deep power user flows that end up in the product are because like people want them."},
  {"speaker": "John", "start_time": 4.44563, "end_time": 4.48803, "text": "And it also translates to an amount of care, I think, right?"},
  {"speaker": "John", "start_time": 4.49103, "end_time": 4.53843, "text": "Like people notice tiny bugs, um, and they fix them because like they're bothered by it."},
  {"speaker": "John", "start_time": 4.54183, "end_time": 4.58113, "text": "Or like people will notice like a string inconsistency and they'll like put up a change to resolve it."},
  {"speaker": "John", "start_time": 4.58113, "end_time": 4.59453, "text": "And it's like all these like little minute things that may otherwise"},
  {"speaker": "John", "start_time": 4.59453, "end_time": 5.0033, "text": "go unreported by users are like always reported internally in a in a really nice way."},
  {"speaker": "Noah", "start_time": 5.193, "end_time": 5.11413, "text": "So I we we did a deep dive with about Figma with uh actually Chris Rasmuson uh the CTO about a year ago in the pragmatic engineer."},
  {"speaker": "Noah", "start_time": 5.11803, "end_time": 5.24093, "text": "And one thing that he told me there is there's this concept at Figma of fixing, you know, like uh a lot of like there having this zero buck policy, especially for new development. So when something is launched for certain amount of time, if it's a bug, you fix it, uh as opposed to what a lot of companies do is, well, you know, there's a report, you kind of put it in the backlog."},
  {"speaker": "Noah", "start_time": 5.24093, "end_time": 5.25643, "text": "Eventually you might or might not fix it."},
  {"speaker": "Noah", "start_time": 5.26013, "end_time": 5.30263, "text": "How do you still do this and and if so, you know, how how are you doing this with with slides, which is a new product that's still not ready or well, it's you know, like just ready."},
  {"speaker": "John", "start_time": 5.30923, "end_time": 5.31803, "text": "Yeah, uh,"},
  {"speaker": "John", "start_time": 5.32413, "end_time": 5.33453, "text": "I definitely resonate with that."},
  {"speaker": "John", "start_time": 5.33833, "end_time": 5.39123, "text": "We have like our like on call shifts work differently than in my past jobs where like when you're on call, it's uh a lot of what you do is you you triage that main feedback channel."},
  {"speaker": "John", "start_time": 5.39643, "end_time": 5.46343, "text": "Um if something's like a quick fix that someone reported, you can just put the fix up right away. But if not, like you go through the act of them prioritizing those things."},
  {"speaker": "John", "start_time": 5.46683, "end_time": 5.49333, "text": "So we do make sure that everything that's reported internally is either then like"},
  {"speaker": "John", "start_time": 5.49333, "end_time": 5.50943, "text": "fixed or planned to be fixed."},
  {"speaker": "Noah", "start_time": 5.51223, "end_time": 5.51543, "text": "Nice."},
  {"speaker": "Jonathan", "start_time": 5.51833, "end_time": 5.59863, "text": "Yeah, I will say, um, being in beta did allow like a little bit of leeway, um, with with bugs, um, to like make sure that we had a really solid set of like an end-to-end flow, um, ahead of like the config launch."},
  {"speaker": "Jonathan", "start_time": 6.163, "end_time": 6.14233, "text": "So, um, we definitely, one thing I really did like respect about Figma is like, when it came to crunch time, um, we were really good about like prioritization instead of like adding more hours onto everyone's workflow."},
  {"speaker": "Jonathan", "start_time": 6.14513, "end_time": 6.24353, "text": "So, I think we were, um, Figma was really good about like making sure that we had like, we were able to figure out the true blockers, um, that would make beta like less successful versus stuff that we could like, could happen in beta that we would want to fix ahead of like our bigger launch."},
  {"speaker": "Noah", "start_time": 6.24918, "end_time": 6.31058, "text": "And how how does it look like to push something out to to production? You know, like you you you fix a bug, um or or you add a new feature."},
  {"speaker": "Noah", "start_time": 6.31338, "end_time": 6.35228, "text": "Do you literally just like push it out and it goes out to every single customer?"},
  {"speaker": "Noah", "start_time": 6.35228, "end_time": 6.37068, "text": "Do you have feature well obviously, you know,"},
  {"speaker": "Noah", "start_time": 6.37068, "end_time": 6.51768, "text": "I'm assuming you'll have code review CI, uh you're just nodding but, you know, like not not every place has it, but I'm I'm I'm going to assume, you know, correct me if I'm wrong. And then when it goes out, do you have a concept of feature flags?"},
  {"speaker": "Noah", "start_time": 6.51768, "end_time": 6.58448, "text": "I I I'm assuming you must have it, but for the most part does it just go out to everyone?"},
  {"speaker": "Noah", "start_time": 6.58448, "end_time": 7.648, "text": "And then like boom, it's there or is there a little bit more kind of careful release process?"},
  {"speaker": "John", "start_time": 7.948, "end_time": 8.428, "text": "I think the the the answer depends on like what the bug is and then like the risk of the bug."},
  {"speaker": "John", "start_time": 8.428, "end_time": 9.648, "text": "or even just the area, right? I think um"},
  {"speaker": "John", "start_time": 10.38, "end_time": 14.948, "text": "uh it's like anything that's going to be touching the the core experience of of of the core editor. If that's like a risky bug fix, always gets a flag."},
  {"speaker": "John", "start_time": 15.258, "end_time": 16.788, "text": "And we tend to roll those out slowly and like watch for"},
  {"speaker": "John", "start_time": 16.788, "end_time": 17.398, "text": "reports."},
  {"speaker": "John", "start_time": 17.398, "end_time": 18.598, "text": "or like any any like bug fixes in our render V2,"},
  {"speaker": "John", "start_time": 18.598, "end_time": 20.58, "text": "right? Just like these like really core areas always always get a flag."},
  {"speaker": "John", "start_time": 20.448, "end_time": 26.068, "text": "And part of that is like, you know, we're we're making this thing that people live in for eight hours a day, you know, like people do their full-time jobs in Figma and so uh we tend to"},
  {"speaker": "John", "start_time": 26.758, "end_time": 27.988, "text": "you know, prioritize not being risky."},
  {"speaker": "Noah", "start_time": 28.333, "end_time": 28.563, "text": "Yeah."},
  {"speaker": "Jonathan", "start_time": 28.763, "end_time": 29.263, "text": "Yeah, in terms of like feature flags,"},
  {"speaker": "Jonathan", "start_time": 29.263, "end_time": 29.923, "text": "Yep, we got we got feature flags."},
  {"speaker": "John", "start_time": 29.923, "end_time": 30.183, "text": "Um."},
  {"speaker": "John", "start_time": 31.413, "end_time": 33.613, "text": "Yeah, last I checked we have over 2,000, I think. Over two okay, okay."},
  {"speaker": "Noah", "start_time": 33.953, "end_time": 36.973, "text": "Yeah. And you must have an internal panel, right? For for for devs to to be able to trigger it on your local thing, right?"},
  {"speaker": "John", "start_time": 37.573, "end_time": 37.883, "text": "Yeah, yeah."},
  {"speaker": "Jonathan", "start_time": 38.503, "end_time": 44.943, "text": "Yeah. Um but in terms of um feature flags, um since we have our like staging environment where we have people like dog footing stuff all the time. Uh we have a lot of like feature flags of like the bigger features we're working on. Um such as like some of the ones we're launching for GA, such as like slide numbers or components or like um object animations."},
  {"speaker": "Jonathan", "start_time": 44.943, "end_time": 53.603, "text": "We have those on internally in our like staging environment. Um and we get a lot of really good like feedback on bugs and um just general like usability. Um by just having those on uh within staging."},
  {"speaker": "Jonathan", "start_time": 53.603, "end_time": 59.833, "text": "And I think that really helps like make us feel a lot more confident of like when we eventually flip that in prod, just making sure that it like that it feels good."},
  {"speaker": "Noah", "start_time": 59.833, "end_time": 1.3.943, "text": "And then is staging internal or is it also for a subset of customers who who might opt into, you know, like give feedback or be on be on the bleeding edge?"},
  {"speaker": "Jonathan", "start_time": 1.4123, "end_time": 1.4643, "text": "Staging is only internal."},
  {"speaker": "Jonathan", "start_time": 1.4643, "end_time": 1.5423, "text": "Staging is only internal. Um I think for slides at least, we had a point where slides was staging only like internal only. And then um I think it was like March 2024 or so, where we had our first like alpha launch where we like had a select few customers that we like decided to open the feature flags up to inside of prod, who we like worked really heavily with user researchers."},
  {"speaker": "Jonathan", "start_time": 1.5423, "end_time": 1.54713, "text": "Yeah."},
  {"speaker": "Jonathan", "start_time": 1.54713, "end_time": 1.58103, "text": "Um to like figure out. So we had a we had an alpha period."},
  {"speaker": "John", "start_time": 1.58103, "end_time": 2.1303, "text": "Something that's interesting that I haven't seen at my past jobs that we started doing recently is um for all of our unit tests and all of our interaction tests,"},
  {"speaker": "John", "start_time": 2.1303, "end_time": 2.11493, "text": "we run the full suite with all the flags off and then with all the flags on. So the same tests are like running uh uh in both permutation. And like obviously like within the test, you can specify a different permutation, right? Like if you're writing a test that only covers something that like has that like requires that flag, obviously you need that flag to be on, you know?"},
  {"speaker": "John", "start_time": 2.14053, "end_time": 2.20003, "text": "Um but this has been like a huge cuz like, you know, before we were doing this, this was a source of regressions, right?"},
  {"speaker": "John", "start_time": 2.20003, "end_time": 2.33163, "text": "Where it's like, hey, you know, like this flag caused this to break and I didn't know this until, you know, someone went to delete the flag and then like that caused test to fail, right? So now that we're doing this, it's it's really, I don't know, it's it's pretty awesome."},
  {"speaker": "John", "start_time": 2.33163, "end_time": 2.33693, "text": "I feel like"},
  {"speaker": "John", "start_time": 2.33693, "end_time": 2.35713, "text": "everyone should do this is my takeaway."},
  {"speaker": "Jonathan", "start_time": 2.35713, "end_time": 2.41973, "text": "Like one really good example is um I was debugging like a really deep like copy paste test and then uh like a really deep copy paste bug and then I wrote some tests for it and I was like, okay, let's make sure like slide one is the first slide and then slide two is the second slide."},
  {"speaker": "Jonathan", "start_time": 2.42493, "end_time": 2.56003, "text": "Um on the at the same time, like John is working on slide numbers and I don't have the slide numbers like feature flag on internally uh like on my local environment, but it's on like in our staging environment. So, um one thing I didn't catch is that like um the slide numbers change like renames slides internally from the word slide space one to just like one or two."},
  {"speaker": "Jonathan", "start_time": 2.56363, "end_time": 3.1863, "text": "And uh that like and like yeah, if I just merge that test, um it would break under John's feature flag."},
  {"speaker": "Jonathan", "start_time": 3.1863, "end_time": 3.41433, "text": "But because we have this um this system where all flags are off and all flags are on, I was able to catch that test before I like merged it in."},
  {"speaker": "Noah", "start_time": 3.42463, "end_time": 3.50913, "text": "I I haven't heard this, but I I'm going to make a note cuz it it's just like sounds like just like Yeah yeah. you know like like a good good practice that a lot of places cuz so many places do have feature flags, but this is smart."},
  {"speaker": "John", "start_time": 3.50913, "end_time": 3.52223, "text": "Yeah, yeah."},
  {"speaker": "John", "start_time": 3.52223, "end_time": 3.56673, "text": "I was going to say getting from where we were to like having this having"},
  {"speaker": "John", "start_time": 3.56673, "end_time": 3.58993, "text": "this this setup did take a bit, right?"},
  {"speaker": "John", "start_time": 3.59293, "end_time": 4.19803, "text": "So like uh each of our flags have their own configuration to be like, am I enabled always? Am I enabled just for uh we call them rollout tests? Um so it's like off in the non-rollout test and then on in the rollout test."},
  {"speaker": "John", "start_time": 4.20143, "end_time": 4.26683, "text": "And so just just getting to the point where we could even get a green build in the rollout test was like a huge effort."},
  {"speaker": "Noah", "start_time": 4.27823, "end_time": 4.30933, "text": "And then one last area that I always curious about is"},
  {"speaker": "Noah", "start_time": 4.31483, "end_time": 4.33413, "text": "uh this concept called ench crit."},
  {"speaker": "Noah", "start_time": 4.34173, "end_time": 4.35523, "text": "Now, this is something I've not heard before."},
  {"speaker": "Noah", "start_time": 4.35833, "end_time": 4.40403, "text": "I think the practice uh is somewhat familiar, but can can you tell me about it? What is ench crit?"},
  {"speaker": "Noah", "start_time": 4.41293, "end_time": 4.43863, "text": "And what is even a crit inside of Figma?"},
  {"speaker": "Jonathan", "start_time": 4.44953, "end_time": 4.46813, "text": "Yeah, enge crits are pretty sweet."},
  {"speaker": "Jonathan", "start_time": 4.47163, "end_time": 4.52223, "text": "Uh we actually run them internally using Fig Jam, uh which is yet another one of our products."},
  {"speaker": "Jonathan", "start_time": 4.52593, "end_time": 4.58013, "text": "But yeah, but instead of someone sending over like a long like dock and then people like leaving comments in those."},
  {"speaker": "Jonathan", "start_time": 4.58013, "end_time": 5.15743, "text": "Um we sometimes do um these like 30-minute enge crits where someone makes a fig jam file, and then for 20 minutes, like a ton of other engineers around the company like jump in and like leave sticky notes, um and then like leave sticky note threads and have all these like um async conversations."},
  {"speaker": "Jonathan", "start_time": 5.18303, "end_time": 5.24633, "text": "And then at the end, we have like sometimes 10 minutes or so to like talk about some of the spiciest like sticky threads."},
  {"speaker": "Jonathan", "start_time": 5.25133, "end_time": 5.30423, "text": "Um I think we have like a good like engineering blog post about this concept, but like for instance, when I was like trying to add components into slides."},
  {"speaker": "Jonathan", "start_time": 5.30423, "end_time": 5.40403, "text": "Um I had a really good enge crit with um our design systems team where I made a fig jam, I like showed him a prototype that I made."},
  {"speaker": "Jonathan", "start_time": 5.40403, "end_time": 5.45883, "text": "Um I like showed some of the code changes that we'd have to do. and then 20 minutes just tons of uh"},
  {"speaker": "Jonathan", "start_time": 5.45883, "end_time": 5.54733, "text": "tons of sticky notes and like spicy feedback and like sticky note threads. And then afterwards we had like 10 minutes of just chatting about like some of the biggest decisions or not."},
  {"speaker": "Jonathan", "start_time": 5.55073, "end_time": 5.55363, "text": "So,"},
  {"speaker": "Jonathan", "start_time": 5.55753, "end_time": 5.56133, "text": "Yeah."},
  {"speaker": "Noah", "start_time": 5.56413, "end_time": 6.673, "text": "So it it's basically like a design review but uh but very Figma kind of flavored, right?"},
  {"speaker": "Jonathan", "start_time": 6.7523, "end_time": 7.2823, "text": "Yeah, I like it cuz it it does lower the stakes a little bit."},
  {"speaker": "Jonathan", "start_time": 7.2823, "end_time": 8.1923, "text": "Like sending out a dock is can be like a little bit scary, but like"},
  {"speaker": "Noah", "start_time": 8.2873, "end_time": 10.9773, "text": "Yeah, yeah, I I I I remember, you know, you wanted it to be be be look good, well formatted, nice wording, that kind of stuff."},
  {"speaker": "John", "start_time": 11.2773, "end_time": 11.5973, "text": "Actually one thing that might be cool to talk about is"},
  {"speaker": "John", "start_time": 11.5973, "end_time": 13.4373, "text": "we have this really cool like bisect system internally. Um we call it web bisect and um using sort of our front-end commit previews where like any commit that's or any pull request that's like merged into our master branch."},
  {"speaker": "John", "start_time": 13.4373, "end_time": 14.3873, "text": "Um we have an image of that like deployed."},
  {"speaker": "John", "start_time": 14.6973, "end_time": 20.6973, "text": "So we have this sweet tool that someone actually made during a maker week where if you see like a bug or something and you don't know where it came from, you can actually use this tool to bisect where which commit actually introduced that bug."},
  {"speaker": "John", "start_time": 21.173, "end_time": 26.6173, "text": "Um so you could be like, okay, I saw this bug for the first time like last week. Um and then this internal tool lets you pick um chooses some like commit preview right in the middle of that."},
  {"speaker": "John", "start_time": 26.6173, "end_time": 27.5273, "text": "Um and then you can like test that preview."},
  {"speaker": "John", "start_time": 27.5273, "end_time": 28.9773, "text": "And you be like, oh, the bug is here or it's not here. And then depending on that, it like bisects a little bit more."},
  {"speaker": "John", "start_time": 29.3373, "end_time": 33.4973, "text": "And then if you do that like 10 times, you can nail down like which commit in the last week or so out of thousands of commits like caused this regression."},
  {"speaker": "John", "start_time": 33.4973, "end_time": 34.6973, "text": "And that's like extremely useful."},
  {"speaker": "Noah", "start_time": 34.6973, "end_time": 35.3073, "text": "So, we'll we'll just we'll close up with some rapid questions."},
  {"speaker": "Noah", "start_time": 35.6673, "end_time": 36.3773, "text": "If that's all right with you guys."},
  {"speaker": "Noah", "start_time": 36.7873, "end_time": 37.8973, "text": "And I'll just ask and you just like shoot whatever comes."},
  {"speaker": "Noah", "start_time": 37.8973, "end_time": 41.2273, "text": "So, what is your favorite language or or framework that you really like using?"},
  {"speaker": "Jonathan", "start_time": 41.783, "end_time": 44.593, "text": "I've got to go with the classic TypeScript."},
  {"speaker": "Noah", "start_time": 44.833, "end_time": 45.143, "text": "Ah."},
  {"speaker": "Noah", "start_time": 46.133, "end_time": 46.603, "text": "It's becoming too popular."},
  {"speaker": "Noah", "start_time": 47.143, "end_time": 48.603, "text": "It is a very good language."},
  {"speaker": "John", "start_time": 49.733, "end_time": 50.43, "text": "Yeah."},
  {"speaker": "John", "start_time": 50.483, "end_time": 53.623, "text": "I've become a big nextjs fan as far as frameworks go."},
  {"speaker": "Noah", "start_time": 53.843, "end_time": 54.203, "text": "Oh, nice."},
  {"speaker": "Noah", "start_time": 54.593, "end_time": 56.723, "text": "Well what what what made you convert?"},
  {"speaker": "John", "start_time": 57.483, "end_time": 58.103, "text": "Um, I"},
  {"speaker": "John", "start_time": 58.983, "end_time": 1.5713, "text": "built my personal site using it just to like test it out and I just thought it was really fun."},
  {"speaker": "John", "start_time": 1.5713, "end_time": 1.10713, "text": "And so since then like uh all my side projects that I do,"},
  {"speaker": "John", "start_time": 1.10713, "end_time": 1.11933, "text": "I've been using nextjs."},
  {"speaker": "Noah", "start_time": 1.11933, "end_time": 1.14613, "text": "who knows if you're going to introduce it to work as well now."},
  {"speaker": "John", "start_time": 1.16863, "end_time": 1.18613, "text": "Our stack's too complicated."},
  {"speaker": "John", "start_time": 1.18613, "end_time": 1.18823, "text": "Yeah."},
  {"speaker": "Noah", "start_time": 1.19403, "end_time": 1.20033, "text": "Oh yeah."},
  {"speaker": "Noah", "start_time": 1.20443, "end_time": 1.24513, "text": "What's a design resource or tool that you use and like?"},
  {"speaker": "John", "start_time": 1.25523, "end_time": 1.30133, "text": "Honestly, the first thing that came to mind is I'm an avid hacker news reader."},
  {"speaker": "John", "start_time": 1.30323, "end_time": 1.34993, "text": "I don't know if that's like 100% what you meant by like resource, but I just I love going through like"},
  {"speaker": "John", "start_time": 1.35233, "end_time": 1.35633, "text": "the resource?"},
  {"speaker": "John", "start_time": 1.36783, "end_time": 1.39793, "text": "the like top voted blog posts there."},
  {"speaker": "Jonathan", "start_time": 1.40653, "end_time": 1.41013, "text": "Yeah."},
  {"speaker": "Jonathan", "start_time": 1.41363, "end_time": 1.49643, "text": "I think um for me, um just like flexing my design muscle a little bit. Uh Refactoring UI was really cool just to get like rapid fire quick tips of like how can I make some like engineering mock or like some like weird website that I'm making on my own just look like slightly better."},
  {"speaker": "Jonathan", "start_time": 1.49643, "end_time": 1.58413, "text": "Like making sure that like um my pixels are in like factors of four or eight pixels or like adding a little bit more white space or like keeping a limited set of font sizes."},
  {"speaker": "Noah", "start_time": 1.58413, "end_time": 2.2833, "text": "So refactoring UI, is this the the book or or is this a tool?"},
  {"speaker": "Jonathan", "start_time": 2.3203, "end_time": 2.4223, "text": "Yeah, there's a book."},
  {"speaker": "Jonathan", "start_time": 2.4693, "end_time": 2.9633, "text": "Um it it's it's like a PDF book that's pretty useful and there's also like um there's like a Twitter thread that I think the author made as well."},
  {"speaker": "Noah", "start_time": 2.9833, "end_time": 3.3513, "text": "This is from the creators of Tailwind, right?"},
  {"speaker": "Jonathan", "start_time": 3.5553, "end_time": 3.6543, "text": "I think so."},
  {"speaker": "Jonathan", "start_time": 3.6543, "end_time": 3.6953, "text": "I think so."},
  {"speaker": "Noah", "start_time": 3.7413, "end_time": 4.1123, "text": "Yeah, I just found it. it's from Adam We and and Steve Schger."},
  {"speaker": "Jonathan", "start_time": 4.2013, "end_time": 4.2543, "text": "Mhm."},
  {"speaker": "Noah", "start_time": 4.3013, "end_time": 4.8903, "text": "Awesome. And what what is a book? Well, what is one or two books fiction or non-fiction that you read and would recommend?"},
  {"speaker": "John", "start_time": 4.9763, "end_time": 5.7083, "text": "Uh I recently read Pisi which is it's like it's pretty short. It's a really captivating"},
  {"speaker": "John", "start_time": 5.7083, "end_time": 6.6943, "text": "story and it's one of those books where after you read it, you really do think about it for every day, you know."},
  {"speaker": "Jonathan", "start_time": 6.9773, "end_time": 7.193, "text": "Yeah, this one isn't software related, but I'm reading um"},
  {"speaker": "Jonathan", "start_time": 7.193, "end_time": 1.30713, "text": "Kurt Kat's um immune book, which is this really cool like book about the immune system being written by like a very good science communicator. And I think it's just cool to sort of like visualize like my immune system and my body in like a whole different way of like this whole collaboration of cells working together."},
  {"speaker": "Noah", "start_time": 1.30713, "end_time": 1.31013, "text": "Nice."},
  {"speaker": "Noah", "start_time": 1.31683, "end_time": 1.36463, "text": "Well, John and and Noah, thanks a lot for for being here and for giving us a behind the scenes view of how"},
  {"speaker": "Noah", "start_time": 1.36463, "end_time": 1.44023, "text": "slides is built and how some some of the simple user interfaces have a lot of complexity behind them. This was really really eye opening for me."},
  {"speaker": "John", "start_time": 1.46523, "end_time": 1.47623, "text": "Yeah, thanks for having us."},
  {"speaker": "Jonathan", "start_time": 1.47953, "end_time": 1.48923, "text": "Yeah, thanks so much for having us."},
  {"speaker": "Noah", "start_time": 1.49276, "end_time": 1.56116, "text": "Isn't it interesting how seemingly simple product or UI can be so complex behind the scenes, like the single side view and Figma slides."},
  {"speaker": "Noah", "start_time": 1.56446, "end_time": 1.59536, "text": "Thanks a lot to John and Noah for all these details that they shared with us."},
  {"speaker": "Noah", "start_time": 1.59936, "end_time": 2.3186, "text": "You can find both of them on social media as linked in the show notes below."},
  {"speaker": "Noah", "start_time": 2.3616, "end_time": 2.11786, "text": "For a more detailed deep dive about the enginering culture at Figma, check out a longer article in the pragmatic engineer titled Inside Figma's enginering culture, also linked in the show notes."},
  {"speaker": "Noah", "start_time": 2.12186, "end_time": 2.16646, "text": "If you enjoyed this podcast, please do subscribe on your favorite podcast platform and on YouTube."},
  {"speaker": "Noah", "start_time": 2.17096, "end_time": 2.19046, "text": "This helps more people discover the podcast."},
  {"speaker": "Noah", "start_time": 2.19506, "end_time": 2.20936, "text": "A special thanks if you leave a rating."},
  {"speaker": "Noah", "start_time": 2.21446, "end_time": 2.23336, "text": "Thanks, and see you in the next one."}
]
```